generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model analytics {
  id         String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  views      Int
  clicks     Int
  company_id String?  @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  company    company? @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model company {
  id           String         @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  description  String?        @db.VarChar(255)
  image        String?        @db.VarChar(255)
  name         String         @db.VarChar(255)
  created_at   DateTime       @default(now()) @db.Timestamp(6)
  updated_at   DateTime       @default(now()) @db.Timestamp(6)
  user_id      String         @db.Uuid
  tenant_id    String         @db.VarChar(255)
  analytics    analytics[]
  user         user           @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  custom_field custom_field[]
  privacy      privacy[]
  social_media social_media[]
  theme        theme[]
}

model custom_field {
  id          String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  field_name  String   @db.VarChar(255)
  field_value String   @db.VarChar(255)
  company_id  String?  @db.Uuid
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  company     company? @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model privacy {
  id         String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  settings   String   @db.VarChar(255)
  company_id String?  @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  company    company? @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model social_media {
  id         String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  platform   String   @db.VarChar(255)
  link       String   @db.VarChar(255)
  company_id String?  @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  company    company? @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model theme {
  id           String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name         String   @db.VarChar(255)
  color_scheme String   @db.VarChar(255)
  company_id   String?  @db.Uuid
  created_at   DateTime @default(now()) @db.Timestamp(6)
  updated_at   DateTime @default(now()) @db.Timestamp(6)
  company      company? @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String    @unique @db.VarChar(255)
  firstName   String?   @db.VarChar(255)
  lastName    String?   @db.VarChar(255)
  roq_user_id String    @db.VarChar(255)
  tenant_id   String    @db.VarChar(255)
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  company     company[]
}
